//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.17929.
// 

namespace Paygate.Utility.Services
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "PartnerCardAPISoap", Namespace = "http://tempuri.org/")]
    public partial class PartnerCardAPI : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback BuyCardsOperationCompleted;

        private System.Threading.SendOrPostCallback GetCardsOperationCompleted;

        /// <remarks/>
        public PartnerCardAPI()
        {
            this.Url = System.Configuration.ConfigurationManager.AppSettings["PartnerCard_WS_URL"]; ;//"http://pay.vtc.vn/wsgetpartnercard/PartnerCardAPI.asmx";
        }

        /// <remarks/>
        public event BuyCardsCompletedEventHandler BuyCardsCompleted;

        /// <remarks/>
        public event GetCardsCompletedEventHandler GetCardsCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuyCards", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuyCards(string serviceCode, string buyCardRequest, string sign)
        {
            object[] results = this.Invoke("BuyCards", new object[] {
                    serviceCode,
                    buyCardRequest,
                    sign});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBuyCards(string serviceCode, string buyCardRequest, string sign, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BuyCards", new object[] {
                    serviceCode,
                    buyCardRequest,
                    sign}, callback, asyncState);
        }

        /// <remarks/>
        public string EndBuyCards(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void BuyCardsAsync(string serviceCode, string buyCardRequest, string sign)
        {
            this.BuyCardsAsync(serviceCode, buyCardRequest, sign, null);
        }

        /// <remarks/>
        public void BuyCardsAsync(string serviceCode, string buyCardRequest, string sign, object userState)
        {
            if ((this.BuyCardsOperationCompleted == null))
            {
                this.BuyCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuyCardsOperationCompleted);
            }
            this.InvokeAsync("BuyCards", new object[] {
                    serviceCode,
                    buyCardRequest,
                    sign}, this.BuyCardsOperationCompleted, userState);
        }

        private void OnBuyCardsOperationCompleted(object arg)
        {
            if ((this.BuyCardsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuyCardsCompleted(this, new BuyCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCards", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCards(string serviceCode, string getCardRequest, string sign)
        {
            object[] results = this.Invoke("GetCards", new object[] {
                    serviceCode,
                    getCardRequest,
                    sign});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCards(string serviceCode, string getCardRequest, string sign, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCards", new object[] {
                    serviceCode,
                    getCardRequest,
                    sign}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCards(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCardsAsync(string serviceCode, string getCardRequest, string sign)
        {
            this.GetCardsAsync(serviceCode, getCardRequest, sign, null);
        }

        /// <remarks/>
        public void GetCardsAsync(string serviceCode, string getCardRequest, string sign, object userState)
        {
            if ((this.GetCardsOperationCompleted == null))
            {
                this.GetCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardsOperationCompleted);
            }
            this.InvokeAsync("GetCards", new object[] {
                    serviceCode,
                    getCardRequest,
                    sign}, this.GetCardsOperationCompleted, userState);
        }

        private void OnGetCardsOperationCompleted(object arg)
        {
            if ((this.GetCardsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardsCompleted(this, new GetCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void BuyCardsCompletedEventHandler(object sender, BuyCardsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuyCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BuyCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void GetCardsCompletedEventHandler(object sender, GetCardsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}