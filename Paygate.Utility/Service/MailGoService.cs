//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace Paygate.Utility
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "MailGoServiceSoap", Namespace = "http://tempuri.org/")]
    public partial class MailGoService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback EventMailOperationCompleted;

        private System.Threading.SendOrPostCallback MailEbankOperationCompleted;

        private System.Threading.SendOrPostCallback MailPaygateOperationCompleted;

        /// <remarks/>
        public MailGoService()
        {
            //"https://ebank.vtc.vn/EbankServices/MailGoService.asmx";
            //"https://ebank.vtc.vn/MailEbank/MailGoService.asmx";
            this.Url = System.Configuration.ConfigurationManager.AppSettings["MAIL_GO_SERVICE.URL"]; 
        }

        /// <remarks/>
        public event EventMailCompletedEventHandler EventMailCompleted;

        /// <remarks/>
        public event MailEbankCompletedEventHandler MailEbankCompleted;

        /// <remarks/>
        public event MailPaygateCompletedEventHandler MailPaygateCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventMail", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EventMail(int accountId, string accountName, string fromname, string fromemail, string toemail, int type, string param, string key)
        {
            object[] results = this.Invoke("EventMail", new object[] {
                    accountId,
                    accountName,
                    fromname,
                    fromemail,
                    toemail,
                    type,
                    param,
                    key});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginEventMail(int accountId, string accountName, string fromname, string fromemail, string toemail, int type, string param, string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("EventMail", new object[] {
                    accountId,
                    accountName,
                    fromname,
                    fromemail,
                    toemail,
                    type,
                    param,
                    key}, callback, asyncState);
        }

        /// <remarks/>
        public int EndEventMail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void EventMailAsync(int accountId, string accountName, string fromname, string fromemail, string toemail, int type, string param, string key)
        {
            this.EventMailAsync(accountId, accountName, fromname, fromemail, toemail, type, param, key, null);
        }

        /// <remarks/>
        public void EventMailAsync(int accountId, string accountName, string fromname, string fromemail, string toemail, int type, string param, string key, object userState)
        {
            if ((this.EventMailOperationCompleted == null))
            {
                this.EventMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventMailOperationCompleted);
            }
            this.InvokeAsync("EventMail", new object[] {
                    accountId,
                    accountName,
                    fromname,
                    fromemail,
                    toemail,
                    type,
                    param,
                    key}, this.EventMailOperationCompleted, userState);
        }

        private void OnEventMailOperationCompleted(object arg)
        {
            if ((this.EventMailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventMailCompleted(this, new EventMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MailEbank", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int MailEbank(int accountId, string accountName, string fromname, string fromemail, string toemail, int type, string param, string key)
        {
            object[] results = this.Invoke("MailEbank", new object[] {
                    accountId,
                    accountName,
                    fromname,
                    fromemail,
                    toemail,
                    type,
                    param,
                    key});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMailEbank(int accountId, string accountName, string fromname, string fromemail, string toemail, int type, string param, string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MailEbank", new object[] {
                    accountId,
                    accountName,
                    fromname,
                    fromemail,
                    toemail,
                    type,
                    param,
                    key}, callback, asyncState);
        }

        /// <remarks/>
        public int EndMailEbank(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void MailEbankAsync(int accountId, string accountName, string fromname, string fromemail, string toemail, int type, string param, string key)
        {
            this.MailEbankAsync(accountId, accountName, fromname, fromemail, toemail, type, param, key, null);
        }

        /// <remarks/>
        public void MailEbankAsync(int accountId, string accountName, string fromname, string fromemail, string toemail, int type, string param, string key, object userState)
        {
            if ((this.MailEbankOperationCompleted == null))
            {
                this.MailEbankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMailEbankOperationCompleted);
            }
            this.InvokeAsync("MailEbank", new object[] {
                    accountId,
                    accountName,
                    fromname,
                    fromemail,
                    toemail,
                    type,
                    param,
                    key}, this.MailEbankOperationCompleted, userState);
        }

        private void OnMailEbankOperationCompleted(object arg)
        {
            if ((this.MailEbankCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MailEbankCompleted(this, new MailEbankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MailPaygate", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int MailPaygate(string fromname, string fromemail, string toemail, int type, string param, string key)
        {
            object[] results = this.Invoke("MailPaygate", new object[] {
                    fromname,
                    fromemail,
                    toemail,
                    type,
                    param,
                    key});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMailPaygate(string fromname, string fromemail, string toemail, int type, string param, string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MailPaygate", new object[] {
                    fromname,
                    fromemail,
                    toemail,
                    type,
                    param,
                    key}, callback, asyncState);
        }

        /// <remarks/>
        public int EndMailPaygate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void MailPaygateAsync(string fromname, string fromemail, string toemail, int type, string param, string key)
        {
            this.MailPaygateAsync(fromname, fromemail, toemail, type, param, key, null);
        }

        /// <remarks/>
        public void MailPaygateAsync(string fromname, string fromemail, string toemail, int type, string param, string key, object userState)
        {
            if ((this.MailPaygateOperationCompleted == null))
            {
                this.MailPaygateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMailPaygateOperationCompleted);
            }
            this.InvokeAsync("MailPaygate", new object[] {
                    fromname,
                    fromemail,
                    toemail,
                    type,
                    param,
                    key}, this.MailPaygateOperationCompleted, userState);
        }

        private void OnMailPaygateOperationCompleted(object arg)
        {
            if ((this.MailPaygateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MailPaygateCompleted(this, new MailPaygateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void EventMailCompletedEventHandler(object sender, EventMailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal EventMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void MailEbankCompletedEventHandler(object sender, MailEbankCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MailEbankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MailEbankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void MailPaygateCompletedEventHandler(object sender, MailPaygateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MailPaygateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MailPaygateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}